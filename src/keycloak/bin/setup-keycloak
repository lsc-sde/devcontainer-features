#!/bin/bash

sudo chmod 0777 /var/lib/rancher/k3s/storage

. /etc/k3d/setup/environment
. /usr/lib/keycloak/etc/environment
. /usr/lib/postgres-on-k3d/etc/environment

echo "Setting up keycloak operator"
echo "KEYCLOAK_NAMESPACE = ${KEYCLOAK_NAMESPACE}"
echo "KEYCLOAK_FLUX_PATH = ${KEYCLOAK_FLUX_PATH}"
echo "KEYCLOAK_VERSION = ${KEYCLOAK_VERSION}"

CURRENT_DATE=$(date '+%Y%m%d%H%M%S')
WORK_FOLDER="/usr/lib/keycloak/work/${CURRENT_DATE}"
CURRENT_FOLDER=$(pwd)

mkdir -p "${WORK_FOLDER}"
cd "${WORK_FOLDER}"

setup-postgres-on-k3d-user -u keycloak -p keycloak
setup-postgres-on-k3d-database -n keycloak -o keycloak

openssl req -new -nodes -out keycloak.csr -newkey rsa:4096 -keyout keycloak.key -subj '/CN=Keycloak/C=GB/ST=Anywhere/L=Anywhere/O=LSCSDE'

cat <<EOF > keycloak.v3.ext 
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = keycloak.xlscsde.local
EOF

openssl x509 -req -in keycloak.csr -CA /usr/lib/trust-manager/work/ca.crt -CAkey /usr/lib/trust-manager/work/ca.key -CAcreateserial -out keycloak.crt -days 3650 -sha256 -extfile keycloak.v3.ext

kubectl kustomize "${KEYCLOAK_FLUX_PATH}/keycloak/${KEYCLOAK_VERSION}" -o "./operator.yaml"

cat <<EOF > ./namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
  labels:
    xlscsde.local/inject: "enabled"
EOF
kubectl apply -f ./namespace.yaml

kubectl create secret tls example-tls-secret --cert keycloak.crt --key keycloak.key -n keycloak
kubectl apply -f "./operator.yaml" -n keycloak


cat <<EOF > ./secret.yaml
apiVersion: v1
data:
  db_username: a2V5Y2xvYWs=
  db_password: a2V5Y2xvYWs=
kind: Secret
metadata:
  name: keycloak-db-secrets
  namespace: keycloak
type: Opaque
EOF
kubectl apply -f ./secret.yaml

cat <<EOF > ./instance.yaml
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: default-instance
  namespace: keycloak
spec:
  instances: 1
  db:
    vendor: postgres
    database: keycloak
    host: ${PG_FQDN}
    usernameSecret:
      name: keycloak-db-secrets
      key: db_username
    passwordSecret:
      name: keycloak-db-secrets
      key: db_password
  hostname:
    hostname: keycloak.xlscsde.local
  http:
    tlsSecret: example-tls-secret
  ingress:
    enabled: false
EOF

kubectl apply -f ./instance.yaml

cat <<EOF > ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: default-keycloak-instance
  namespace: keycloak
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect : "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect : "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
spec:
  ingressClassName: nginx
  rules:
  - host: keycloak.xlscsde.local
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: default-instance-service
            port: 
              name: https
  tls:
  - hosts:
    - keycloak.xlscsde.local
    secretName: example-tls-secret
EOF
kubectl apply -f ./ingress.yaml


nohup kubectl port-forward svc/default-instance-service -n keycloak 443:8443 &

cd "${CURRENT_FOLDER}"

exit 0