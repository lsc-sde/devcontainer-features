#!/bin/bash

. /etc/k3d/setup/environment

CURRENT_DATE=$(date '+%Y%m%d%H%M%S')
WORK_FOLDER="/usr/lib/apache-superset/work/${CURRENT_DATE}"
CURRENT_FOLDER=$(pwd)
IMAGE_NAME="k3d-${CLUSTERNAME}-registry.local:${REGISTRY_PORT}/apache/superset"
IMAGE_TAG="local"
CONTAINER_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"


sudo mkdir -p "${WORK_FOLDER}"
sudo chmod 0777 "${WORK_FOLDER}"

cd "/workspaces/lsc-sde/products/sde-3rd-party/superset/docker-apache-superset"
docker build . -t "${CONTAINER_IMAGE}"
docker push "${CONTAINER_IMAGE}"

cd "${WORK_FOLDER}"

helm repo add superset https://apache.github.io/superset

if [ -f "${SECRETSPATH}/ApacheSupersetSecretKey" ]; then
  echo "ApacheSupersetSecretKey is present in secrets"
  SECRET_KEY=$(cat "${SECRETSPATH}/ApacheSupersetSecretKey")
else
  echo "ApacheSupersetSecretKey does not exist in secrets, creating it now"
  SECRET_KEY=$(openssl rand -base64 42) 
  echo $SECRET_KEY > "${SECRETSPATH}/ApacheSupersetSecretKey"
fi

CLIENT_ID=$(cat "${SECRETSPATH}/ApacheSupersetAppRegistrationClientID")
CLIENT_SECRET=$(cat "${SECRETSPATH}/ApacheSupersetAppRegistrationClientSecret")
AZ_TENANT_ID=$(cat "${SECRETSPATH}/AzureTenantId")

cat <<EOF > superset-config.yaml
postgresql:
  postgresqlPassword: "R3s3tM3N0w!"

# This is to workaround the problem with coredns which makes login.microsoftonline.com unavailable on docker desktop
hostAliases: 
- ip: 40.126.53.16
  hostnames:
  - login.microsoftonline.com

configOverrides:  
  secret: |
    SECRET_KEY = '${SECRET_KEY}'

  enable_oauth: |
    # This will make sure the redirect_uri is properly computed, even with SSL offloading
    ENABLE_PROXY_FIX = True

    from flask_appbuilder.security.manager import AUTH_OAUTH
    AUTH_TYPE = AUTH_OAUTH
    OAUTH_PROVIDERS = [
      {
        "name": "azure",
        "icon": "fa-windows",
        "token_key": "access_token",
        "remote_app": {
          "client_id": "${CLIENT_ID}",
          "client_secret": "${CLIENT_SECRET}",
          "api_base_url": "https://login.microsoftonline.com/${AZ_TENANT_ID}/oauth2",
          "client_kwargs": {
              "scope": "User.read name preferred_username email profile upn",
              "resource": "${CLIENT_ID}",
              # Optionally enforce signature JWT verification
              "verify_signature": False
          },
          "request_token_url": None,
          "access_token_url": "https://login.microsoftonline.com/${AZ_TENANT_ID}/oauth2/token",
          "authorize_url": "https://login.microsoftonline.com/${AZ_TENANT_ID}/oauth2/authorize",
        },
      },
    ]

    
    # Will allow user self registration, allowing to create Flask users from Authorized User
    AUTH_USER_REGISTRATION = True

    # The default user self registration role
    AUTH_USER_REGISTRATION_ROLE = "Public"

image:
  repository: ${IMAGE_NAME}
  tag: ${IMAGE_TAG}
  imagePullPolicy: Always

bootstrapScript: |
  #!/bin/bash
  pip install --upgrade "apache-superset[databricks]"
  pip install --upgrade authlib

EOF

cat superset-config.yaml

helm upgrade --install -n superset-test --create-namespace --values superset-config.yaml superset-test  superset/superset
kubectl rollout restart deployments/superset-test -n superset-test
cd "${CURRENT_FOLDER}"
